<?php
/**
 * Created by PhpStorm.
 * User: Soso
 * Date: 11/6/2018
 * Time: 1:11 PM
 */

namespace App\Models;


class AttachmentModel
{
    private static $table = 'wp_lux_posts';


    function upload() {
         //  print_r($_POST);print_r($_FILES);  // echo $_FILES["upload"]["name"];
         $data = [];

        if (!function_exists('wp_handle_upload')) {
            require_once(ABSPATH . 'wp-admin/includes/file.php');
        }
       
        $uploadedfile     = $_FILES['file'];
        $upload_overrides = array('test_form' => false);




            ////// validate the file size ///////
        /*$tmpName = $uploadedfile['tmp_name'];
        list($width, $height, $type, $attr) = @getimagesize($tmpName);
        if ($width != 500 || $height != 500) {
            $error .= "Image is to small<br />";
            unlink($uploadedfile['tmp_name']);
        }*/

       

        if( ! $this->_photo_extention_allowed($uploadedfile['name'])) {

           return ["msg"=>"Please upload a JPG, GIF, or PNG file<br />","status"=>"error"];
        }


        $movefile = wp_handle_upload($uploadedfile, $upload_overrides);
        
        $this->resize($movefile['file']);

      //  echo "<pre>"; print_r($movefile);

        if ($movefile && !isset($movefile['error'])) {
            $data['msg']    = "File Upload Successfully";
            $data['status'] = 'success';
            $data['url']    = $movefile['url'];
        
        } else {
            /**
             * Error generated by _wp_handle_upload()
             * @see _wp_handle_upload() in wp-admin/includes/file.php
             */
            $data['msg'] = $movefile['error'];
            $data['status'] = 'error';
        }

        return $data;
    }

    function resize($file) {
           $wp_upload_dir = wp_upload_dir();

          // echo "<pre>"; print_r($wp_upload_dir);
            $image = wp_get_image_editor( $file );
        if ( ! is_wp_error( $image ) ) {
             $image->resize( 150, 150, true );
             $image->save($wp_upload_dir['path'].'/'.$this->_get_file_name($file).'200x200.'.$this->_get_file_extention($file) );

             $image->resize( 400, 400, true );
             $image->save($wp_upload_dir['path'].'/'.$this->_get_file_name($file).'200x200.'.$this->_get_file_extention($file) );
        }   
    }

    function insert($file) {
        // Get the path to the upload directory.
        $wp_upload_dir = wp_upload_dir();

        $attachment = array(
            'guid'=> $wp_upload_dir['url'] . '/' . basename( $file ), 
            'post_mime_type' => $this->_get_filetype($file),
            'post_name' => basename( $file ),
            'post_title' => basename( $file ),
            'post_status' => 'inherit'
             );

        $attach_id  = wp_insert_attachment($attachment, $file, $post_id);

        // Make sure that this file is included, as wp_generate_attachment_metadata() depends on it.
        require_once( ABSPATH . 'wp-admin/includes/image.php' );
    
        // Generate the metadata for the attachment, and update the database record.
        //$attach_data = wp_generate_attachment_metadata( $attach_id , $file );
        //wp_update_attachment_metadata( $attach_id , $attach_data );

        return $attach_id ;

    }    

    private function _get_filetype($file) {
        // Get the type of the uploaded file. This is returned as "type/extension"
        $arr_file_type = wp_check_filetype(basename($file));
        return $arr_file_type['type'];
    } 

    private function _get_file_extention($file) {
      
        return  pathinfo($file, PATHINFO_EXTENSION);
    }
    
    private function _get_file_name($file) {
      
        return  pathinfo($file, PATHINFO_FILENAME );
    }
     /** return false if file type is wrong 
     *  return file type if sucess
     */

    private function _photo_extention_allowed($file) {

        // Set an array containing a list of acceptable formats
        $allowed_file_types = array('image/jpg','image/jpeg','image/gif','image/png');
        $file_type = $this->_get_filetype($file);    
        // If the uploaded file is the right format
        if (! in_array($file_type, $allowed_file_types))
            return false;

        return $file_type;

    }
}
